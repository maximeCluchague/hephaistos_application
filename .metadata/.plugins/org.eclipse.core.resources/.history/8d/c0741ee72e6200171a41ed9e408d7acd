<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>

<form>
	Charger une image:<br>
	<input type="text" id="urlImage">
	<input type="button" value="Charger Plan" onclick="chargerImage()"/></br></br>
	
	Ajouter un capteur:</br>
	capteur <select id="capteurs"></select>
 
    x1=<input type="text" id="x1" size="1">
	y1=<input type="text" id="y1" size="1">
	x2=<input type="text" id="x2" size="1">
	y2=<input type="text" id="y2" size="1">
	<input type="button" value="Ajouter" onclick="ajouter()"/>
	<input type="button" value="Annuler" onclick="annuler()"/>
</form> </br>

<center>
<canvas id="myCanvas" width="300" height="100" style="border:1px solid black;" >
 Votre navigateur ne supporte pas canvas.
</canvas>
</center>
		

<script type="text/javascript">
	
	var imageChargee = false;

	var url = "ws://localhost:8080/hephaistos_project/hephaistoswebserver";
	
	var webSocket = new WebSocket(url);
	
	var context = document.getElementById('myCanvas').getContext("2d");
	
	urlImage.value = "planBatiment.jpg";
	
	var capteurDispo = [];
	nbCapteurDispo =0;
	
	nbOption = 0;
	
	var capteurOnImage = [];
	
	var firstPointSelected = false;
	var secondPointSelected = false;
	
	var ajouter = function(){
		if(imageChargee){
			if(nbOption>0){
				if(firstPointSelected && secondPointSelected){
					firstPointSelected = false;
					secondPointSelected = false;
					
					var e = document.getElementById("capteurs");
					var currentSelect = e.options[e.selectedIndex].text;
					capteurOnImage.push({idCapteur:currentSelect,x1:x1.value,y1:y1.value,x2:x2.value,y2:y2.value});
					
					// On trace une premiere ligne
					context.strokeStyle='#FF0000';
			        context.beginPath();
			        context.moveTo(parseInt(x1.value),parseInt(y1.value));
			        context.lineTo(parseInt(x2.value),parseInt(y2.value));
			        context.lineWidth = 5;
			        context.stroke();
			        
			        // On dessine le nom du capteur
			        context.fillStyle = "#FFFFFF";
			        context.fillRect((parseInt(x1.value)+parseInt(x2.value))/2+20,(parseInt(y1.value)+parseInt(y2.value))/2-20, 30 + currentSelect.length*8, 25);
			        context.strokeStyle = "#444444";
			        context.lineWidth = 2;
			        context.strokeRect((parseInt(x1.value)+parseInt(x2.value))/2+20,(parseInt(y1.value)+parseInt(y2.value))/2-20, 30 + currentSelect.length*8, 25);
			        context.fillStyle = "blue";
			        context.font = "15px Arial";
			        context.fillText("id : "+currentSelect,(parseInt(x1.value)+parseInt(x2.value))/2+25,(parseInt(y1.value)+parseInt(y2.value))/2-2); 
			        
			        
			        removeOption();
					x1.value = "";
					y1.value = "";
					x2.value = "";
					y2.value = "";
				}else{
					alert("Veuillez sélectionner des coordonnées sur l'image en placant votre curseur sur le plan puis en appuyant sur la touche 'Entrer'");
				}
			}else{
				alert("Aucun capteur disponible ... ");
			}
		}else{
			alert("Veuillez charger une image");
		}
	}
	
	var annuler=function(){
		firstPointSelected = false;
		secondPointSelected = false;
		x1.value = "";
		y1.value = "";
		x2.value = "";
		y2.value = "";
	}
	
	var deccrocherCapteur = function(capteur){
		for(i=0;i<capteurDispo.length;i++){
			if(capteur==capteurDispo[i]){
				capteurDispo.splice(i,1);
				nbCapteurDispo=nbCapteurDispo-1;
			}
		}
	}
	
	var accrocherCapteur = function(capteur){
		var estAccrocher =false;
		for(i=0;i<capteurDispo.length;i++){
			if(capteur==capteurDispo[i]){
				estAccrocher =true;
			}
		}
		if(!estAccrocher){
			nbCapteurDispo++;
			capteurDispo.push(capteur);
			addOption(capteur);
		}
	}
	
	function addOption(capteur)
	{
	    var select = document.getElementById ("capteurs");
	    var newOption = new Option (capteur, "value");
	    select.options.add (newOption);
	    nbOption++;
	}
	
	function removeOption(){
		var x = document.getElementById("capteurs");
	    x.remove(x.selectedIndex);
	    nbOption=nbOption-1;
	}

	
	

	function chargerImage(){
		var img = new Image();
		img.onload = function () {
		    context.drawImage(img,0,0, img.width, img.height);
		}
		img.src = urlImage.value;
		myCanvas.width = img.width;
		myCanvas.height = img.height;
		imageChargee = true;
	}
	
	window.addEventListener('keydown',this.check,false);
	
	function check(e) {
		if(!firstPointSelected){
			if(e.keyCode === 13){
		    	alert("Vous avez selectionné le premier point, veuillez selectionner le second en appuyant sur la touche 'Entrer'");
		    	if(x1.value.length>0){
		    		firstPointSelected = true;
		    	}
			}
		}else{
			if(!secondPointSelected){
				if(e.keyCode === 13){
			    	alert("Les points sont enregistrer appuyer sur 'Ajouter' pour confirmer ou 'Annuler' pour annuler la sélection");
			    	if(x2.value.length>0){
			    		secondPointSelected = true;
			    	}
			    }
			}
		}
	}
      
      function getMousePos(canvas, evt) {
        var rect = canvas.getBoundingClientRect();
        return {
          x: evt.clientX - rect.left,
          y: evt.clientY - rect.top
        };
      }
      var canvas = document.getElementById('myCanvas');
      var context = canvas.getContext('2d');

      canvas.addEventListener('mousemove', function(evt) {
        var mousePos = getMousePos(canvas, evt);
        if(!firstPointSelected){
	        x1.value = mousePos.x;
	        y1.value = mousePos.y;
        }else{
        	if(!secondPointSelected){
    	        x2.value = mousePos.x;
    	        y2.value = mousePos.y;
            }
        }
      }, false);
	
	
	
	webSocket.onmessage = function processMessage(sensorMessage) {
		
		var json = JSON.parse(sensorMessage.data);
		if(json.commande == "deccrocherCapteur"){
			deccrocherCapteur(json.idCapteur);
		}else{
			accrocherCapteur(json.idCapteur);
			//updateLine(200,300,200,500,json.idCapteur,json.acquisition);
			for(i=0;i<capteurOnImage.length;i++){
				if(json.idCapteur==capteurOnImage[i].idCapteur){
					var x1 = capteurOnImage[i].x1;
					var y1 = capteurOnImage[i].y1;
					var x2 = capteurOnImage[i].x2;
					var y2 = capteurOnImage[i].y2;
					var idCapteur = capteurOnImage[i].idCapteur;
					updateLine(x1,y1,x2,y2,idCapteur,json.acquisition);
				}
			}
		}
	}
	
	function updateLine(x1,y1,x2,y2,idCapteur,acquisition){
        
        // Changement de couleur
        var acq = parseInt(acquisition);
        if(acq>0){
        	context.strokeStyle='#00FF00';
        }else{
        	context.strokeStyle='#FF0000';
        }
        
        //Tracé de la barriere capteur
        
        context.beginPath();
        context.moveTo(x1,y1);
        context.lineTo(x2,y2);
        context.lineWidth = 5;
        context.stroke(); 
    }
</script>
</body>
</html>