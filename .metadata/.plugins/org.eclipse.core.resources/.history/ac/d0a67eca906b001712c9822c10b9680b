<!DOCTYPE html>
<html lang="en" class="no-js">
	<head>
		<meta charset="UTF-8" />
		<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"> 
		<meta name="viewport" content="width=device-width, initial-scale=1.0"> 
		<title>Hephaistos Application</title>
		<meta name="description" content="Creative Button Styles  - Modern and subtle styles &amp; effects for buttons" />
		<meta name="keywords" content="button styles, css3, modern, flat button, subtle, effects, hover, web design" />
		<meta name="author" content="Codrops" />
		<link rel="shortcut icon" href="../favicon.ico"> 
		<link rel="stylesheet" type="text/css" href="css/default.css" />
		<link rel="stylesheet" type="text/css" href="css/component.css" />
		<link rel="stylesheet" href="css/logoMachineUtilise.css" />
		
		<style>
			canvas{
				width: 100%;
			}


			select {
			    padding:3px;
			    margin: 0;
			    -webkit-border-radius:4px;
			    -moz-border-radius:4px;
			    border-radius:4px;
			    background: #226fbe;
			    color:#FFFFFF;
			    border:none;
			    outline:none;
			    display: inline-block;
			    -webkit-appearance:none;
			    -moz-appearance:none;
			    appearance:none;
			    cursor:pointer;
			}
			
			.littleButton{
				padding: 8px 24px;
			}
			.console {
				color: white;
			    width: 100%;
			    height: 15em;
 			 	transition: all .3s
 			 	ease-out;
			    padding: 12px 20px;
			    box-sizing: border-box;
			    border: 3px solid #FFFFFF;
			    border-radius: 4px;
			    background-color: #FFFFFF;
				color: #666666;
			    resize: none;
			    font-family: Verdana, Geneva, sans-serif;
           		font-size:15px
			}
			

			.console:focus{
				 height: 30em;
				
			}
			
			.panel{
				background-color: #4593e3;
			    box-sizing: border-box;
			    border: 3px solid #FFFFFF;
			    border-radius: 4px;
				padding: 10px;
				width: 100%;
			}
			.sousPanel{
				background-color: #4593e3;
			    box-sizing: border-box;
			    border: 1px solid #FFFFFF;
			    padding: 4px;
			    border-radius: 4px;
				width: 100%;
			}
			input[type=text] {
				background-color: #4593e3;
				width: 50%;
			    padding: 5px 20px;
			    margin: 8px 0;
			    border: none;
    			border-bottom: 2px solid White;
			    transition: all 0.2s;
			}

			.deconnexion:hover{
				background-color: #ff5457;
			}
			
			.deconnexion:active{
				background-color: #ff5457;
				border: 3px solid #AA1111;
				color: #AA1111;
			}
			.champsSaisie{
				text-align:center;
			    width: 50%;
			    box-sizing: border-box;
			    border: none;
			    background-color: #226fbe;
			    color: white;
			    font-family: Verdana, Geneva, sans-serif;
           		font-size:15px
			}
			.champsSaisie:focus{
				width: 55%;
				background-color: #589ee6;
			}
			
			.champsSaisie:hover{
				width: 55%;
			}
			
			.clear{
				background-color:#4593e3;
			    border: 3px solid #FFFFFF;
			    border-radius: 40px;
			}
			
			.background {
				max-width : 1000px;
				min-width : 720px;
			}
			.send{
			
				background-color:#4593e3;
				box-sizing: border-box;
			    border: 3px solid #FFFFFF;
			    border-radius: 40px;
			}
			.send:hover{
				background-color:#4593e3;
				box-sizing: border-box;
			    border: 3px solid #FFFFFF;
			    border-radius: 40px;
			}
			.police{
				 font-family: Verdana, Geneva, sans-serif;
           		 font-size:20px
			}
			#primary_nav ul {
			    list-style: none;
			    background: #1c1c1c;
			    padding: 5px 0;
			}
			 
			#primary_nav li a {
			    display: block;
			    padding: 0 20px;
			    color: #fff;
			    text-decoration: none;
			    font-weight: bold;
			    text-transform: uppercase;
			    letter-spacing: 0.1em;
			    letter-spacing: 0.1em;
			    line-height: 2em;
			    height: 2em;
			    border-bottom: 1px solid #383838;
			}
			 
			#primary_nav li:last-child a {
			    border-bottom: none;
			}
			 
			#primary_nav li a:hover,
			#primary_nav li a:focus {
			    color: #1c1c1c;
			    background: #ccc;
			}
			 
			/*pied de page*/
			 
			footer {
			    font-family: 'PT Serif', serif;
			    font-style: italic;
			    text-align: center;
			    font-size: 14px;
			}	
			@media only screen and (min-width: 768px) {
 
		    a.to_nav {
		        display: none;
		    }
		 
		    .wrapper {
		        position: relative;
		        width: 768px;
		        margin: auto;
		    }
		 
		    #primary_nav {
		        position: absolute;
		        top: 5px;
		        right: 10px;
		        background: none;
		    }
		 
		    #primary_nav li {
		        display: inline;
		    }
		 
		    #primary_nav li a {
		        float: left;
		        border: none;
		        padding: 0 10px;
		        -webkit-border-radius: 2px;
		        -moz-border-radius: 2px;
		        border-radius: 2px;
		    }
 
}	
		</style>

	</head>
	<body>
		<div class="container">
			<!-- Top Navigation -->
			<div id="device"><span></span></div></br>
			<header class="header">
				<h1>Hephaistos Application<span>Server Interface</span></h1>	
			</header>
			
			<nav id="primary_nav">
			    <ul>
			        <li><a href="">test1</a></li>
			        <li><a href="">test2</a></li>
			        <li><a href="">test3</a></li>
			        <li><a href="">test4</a></li>
			        <li><a href="">test5</a></li>
			        <li><a href="#home">Top</a></li>
			    </ul>
			 
			</nav><!--end primary_nav-->
			
			<section class="color-6 background">
	
		<span class="police">Adresse</span> </br> 
		<input id="adresse" type="text" class="champsSaisie" size="20" onclick="javascript:this.value = '';" /></br>
		<span class="police">Port</span> </br> 
		<input id="port" type="text" class="champsSaisie" size="20" onclick="javascript:this.value = '';"/></br>
		<center>
		</br>
		<button class="btn btn-4 btn-4a icon-arrow-right" onclick="connexion()">Connexion</button> 
		<button class="btn btn-4 btn-4d icon-arrow-left deconnexion" onclick="deconnexion()">Deconnexion</button>
		</center>
	 	
	</br>
	<span class="police">Console Client/Server</span> </br> 
	
	<textarea id="console" class="console" readonly="readonly" rows="10" cols="130"></textarea></br>
	<button class="btn btn-5 btn-5a icon-remove clear" onclick="clearConsole()"><span>Clear</span></button>
	</br>
	</section>
			<header class="header">
				<h1><span>Send Data to Server</span></h1>
			</header>
	<section class="color-6 background">	
	<span class="police">Identifiant Capteur</span> </br> 
	<input id="idCapteur" type="text" class="champsSaisie" size="20" /></br>
	<span class="police">Acquisition</span> </br> 
	<input id="acquisition" type="text" class="champsSaisie" size="20" /></br>
	<span class="police">Commande</span> </br> 
	<input id="commande" type="text" class="champsSaisie" size="20" value='NULL' onFocus="if (this.value=='NULL') {this.value=''}"/></br>
	</br>
		<center><button class="btn btn-3 btn-3e icon-arrow-right send" onclick="send()">Send Message</button></center>
		
	</section>
	<header>
				<h1><span>© Equipe hephaistos - INRIA Sophia-Antipolis</span></h1>	
			</header>
		</div><!-- /container -->
		
		<!-- For the side ad -->
		<script type="text/javascript">
			adresse.value = "localhost";
			port.value = "8080";
			//commande.value = "NULL";
			document.getElementById("console").value += "\nEN ATTENTE D'UNE CONNEXION ...";
			
			var webSocket = null;
			var isConnect = false;
			
			function connexion(){
				try{
					webSocket.close();
					
				}catch(exception){
					
				}
				try{
					url = "ws://"+adresse.value.toString()+":"+port.value.toString()+"/hephaistos_project/hephaistoswebserver";
					
					webSocket = new WebSocket(url);
					
					webSocket.onopen = function(event){
						isConnect = true;
						document.getElementById("console").value = "\n[---> CONNEXION ETABLIE AVEC \'"+url+"\']\n\n";
					}
					
					webSocket.onclose = function(event){
						document.getElementById("console").value = "\n[-x-> DECONNEXION DE \'"+url+"\']";
						document.getElementById("console").value += "\n\nEN ATTENTE D'UNE CONNEXION ...";
					}
					
					webSocket.onerror = function(event){
						document.getElementById("console").value = "\n[IMPOSSIBLE DE SE CONNECTER \'"+url+"\']";
					}
					
					webSocket.onmessage = function processMessage(sensorMessage) {
						var json = JSON.parse(sensorMessage.data);
						document.getElementById("console").value += "<MESSAGE> {\"idCapteur\":\""+ json.idCapteur+"\",\"acquisition\":\""+ json.acquisition+"\",\"date\":\"" +json.date+"\",\"commande\":\""+json.commande+"\"}\n";
					}
					
				}catch(exception){
					document.getElementById("console").value += "\n\n[IMPOSSIBLE DE SE CONNECTER]";
				}
			}
				
			function deconnexion(){
				
				if(isConnect){
					webSocket.close();
					isConnect = false;
				}else{
					document.getElementById("console").value += "\n\nVous n'êtes pas connecté";
				}
				
			}
			
			function send(){
				// On créer le Json qui va etre envoyé
				if(isConnect){
					var date=new Date();
					var messageJson = {"idCapteur": idCapteur.value,"acquisition": acquisition.value,"date": date,"commande":commande.value};
					
					webSocket.send(JSON.stringify(messageJson));
					// On remet les textField de la page html vide
					idCapteur.value = "";
					acquisition.value = "";
					commande.value = "NULL";

				}else{
					document.getElementById("console").value += "\n\nVous devez être connecté pour envoyer un message vers le serveur ... ";
				}
			}
			
			window.onbeforeunload = function(){
				websocket.onclose = function(){};
				websocket.close();
				
			};
		
			function clearConsole(){
				document.getElementById("console").value = "";
			}
		</script>
	</body>
</html>