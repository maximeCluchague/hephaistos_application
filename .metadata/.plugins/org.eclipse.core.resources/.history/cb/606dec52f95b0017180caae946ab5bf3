package com.za.websocket;

import java.io.IOException;
import java.io.StringWriter;
import java.net.URISyntaxException;
import java.util.ArrayList;

import javax.json.Json;
import javax.json.JsonObject;
import javax.json.JsonWriter;



public class ClientJava{
	SensorClientEndpoint client;
	ArrayList<String> capteurs;
	
	public ClientJava() throws URISyntaxException{
		this.client = new SensorClientEndpoint();
		this.capteurs = new ArrayList<String>();
	}
	
	public boolean accrocherCapteur(String idCapteur){
		return capteurs.add(idCapteur);
	}
	
	public boolean deccrocherCapteur(String idCapteur){
		return capteurs.remove(idCapteur);
	}
	
	public boolean containsCapteur(String idCapteur){
		return capteurs.contains(idCapteur);
	}
	
	public static String buildJsonMessage(String message){
		JsonObject jsonObject = Json.createObjectBuilder().add("message", message).build();
		StringWriter stringWriter = new StringWriter();
		try(JsonWriter jsonWriter = Json.createWriter(stringWriter)){jsonWriter.write(jsonObject);}
		return stringWriter.toString();
	}
	public static String buildJsonUsername(String message){
		JsonObject jsonObject = Json.createObjectBuilder().add("username", message).build();
		StringWriter stringWriter = new StringWriter();
		try(JsonWriter jsonWriter = Json.createWriter(stringWriter)){jsonWriter.write(jsonObject);}
		return stringWriter.toString();
	}
	
	public boolean envoieMessage(String idCapteur,String message){
		try {
			client.sendMessage(buildJsonUsername(Integer.toString(capteurs.indexOf(idCapteur)+1)));
			client.sendMessage(buildJsonMessage(message));
			return true;
		} catch (IOException e) {
			return false;
		}
	}
	
	public boolean fermerClient(){
		try {
			this.client.session.close();
			return true;
		} catch (IOException e) {
			return false;
		}
	}
	
	public void afficheCapteurs(){
		System.out.println(capteurs);
	}
}
